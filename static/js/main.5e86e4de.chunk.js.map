{"version":3,"sources":["assets/burger-logo.png","Components/hoc/Aux.js","Components/Layout/Toolbar/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Layout/Toolbar/Navigation/NavigationItems/NavigationItems.js","Components/Layout/Toolbar/Navigation/Navigation.js","Components/Burger/OrderBtn/Backdrop/SideDrawerBackdrop.js","Components/Layout/Toolbar/Navigation/SideDrawer/SideDrawer.js","Components/Layout/Toolbar/Toolbar.js","Components/Layout/Layout.js","Components/Burger/BurgerIngredient/BurgerIngredient.js","Components/Burger/Burger.js","Components/Burger/BurgerControls/BurgerControl/BurgerControl.js","Components/Burger/BurgerControls/BurgerControls.js","Components/Burger/OrderBtn/OrderBtn.js","Components/Burger/OrderBtn/Backdrop/Backdrop.js","Components/Burger Builder/BurgerBuilder.js","index.js"],"names":["module","exports","Aux","props","children","NavigationItems","console","log","className","href","link","active","NavigationItem","Navigation","SideDrawerBackdrop","handleSideBar","onClick","closeSideDrawer","SideDrawer","handleMysideBar","style","transform","opacity","display","transition","src","burgerLogo","alt","Toolbar","showToolbarOptions","setState","toolBarClicked","closeToolbarOptions","state","this","React","Component","Layout","BurgerIngredient","ingredient","type","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","index","key","reduce","accumulator","currentArr","concat","length","BurgerControl","handleLessBtn","label","removeFunc","addFunc","BurgerControls","ctrl","OrderBtn","componentDidUpdate","handleOrderBtn","shouldModalOpen","showModal","modalState","purchasable","loading","margin","TPrice","toFixed","closeModal","ordered","id","PureComponent","Backdrop","show","clicked","INGREDIENT_PRICES","salad","cheese","meat","bacon","tomatoes","BurgerBuilder","updatePurchaseState","ingr","sum","el","addIngredient","increaseCount","updatedIngredients","priceAddition","newPrice","totalPrice","removeIngredient","ingredientCount","priceDeduction","purchaseHandler","handleCompletedOrder","textAlign","marginTop","isLessBtnDisabled","disableLessBtns","MainApp","test","ReactDOM","render","document","getElementById"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,yC,iLCK5BC,G,KALH,SAACC,GAAD,OAAWA,EAAMC,WCWdC,EARS,SAACF,GAErB,OADAG,QAAQC,IAAIJ,GAER,wBAAIK,UAAU,YAAW,uBAAGC,KAAMN,EAAMO,KAAMF,UAAWL,EAAMQ,OAAS,SAAW,MAAOR,EAAMC,YCYzFC,EAdS,SAACF,GAErB,OACI,wBAAIK,UAAU,aAGT,kBAACI,EAAD,CAAgBF,KAAK,IAAKC,QAAM,GAAhC,kBACA,kBAACC,EAAD,CAAgBF,KAAK,KAArB,eCEEG,EARI,SAACV,GAChB,OACI,yBAAKK,UAAU,eACX,kBAAC,EAAD,Q,gBCDGM,EALW,SAACX,GACvB,OAAOA,EAAMY,cAAgB,yBAAKP,UAAU,WAAWQ,QAASb,EAAMc,kBAAyB,MC2BpFC,EAzBI,SAACf,GAEhBG,QAAQC,IAAIJ,EAAMY,eAClB,IAAII,EAAkBhB,EAAMY,cAC5B,OACI,iCACI,kBAAC,EAAD,CAAoBA,cAAeZ,EAAMY,cAAeE,gBAAiBd,EAAMc,kBADnF,IAEI,yBAAKT,UAAU,aACfY,MAAO,CACPC,UAAWF,EAAkB,gBAAkB,oBAC/CG,QAASH,EAAmB,IAAM,IAClCI,QAASJ,EAAkB,QAAS,OACpCK,WAAY,kBAGR,yBAAKhB,UAAU,YAAYiB,IAAKC,IAAYC,IAAI,WACpD,6BACI,kBAAC,EAAD,UC4BDC,E,kDA1CX,WAAYzB,GAAO,IAAD,8BACd,cAAMA,IAKV0B,mBAAqB,WACjB,EAAKC,SAAS,CACVC,gBAAgB,KARN,EAWlBC,oBAAsB,WAClB,EAAKF,SAAS,CACVC,gBAAgB,KAXpB,EAAKE,MAAM,CACPF,gBAAgB,GAHN,E,qDAgBT,IAAD,OAEL,OADCzB,QAAQC,IAAI2B,KAAKD,MAAMF,gBAEpB,kBAAC,EAAD,KACK,4BAAQvB,UAAU,WACd,4BAAQA,UAAU,oBAAoBQ,QAAS,kBAAI,EAAKa,uBACpD,8BACA,8BAFJ,IAGI,+BAEJ,yBAAKrB,UAAU,iBACX,yBAAKA,UAAU,aAAaiB,IAAKC,IAAYC,IAAI,YAErD,kBAAC,EAAD,CAAYZ,cAAemB,KAAKD,MAAMF,eAAgBd,gBAAiBiB,KAAKF,sBAE5E,kBAAC,EAAD,Y,GAhCEG,IAAMC,WCSbC,EAbA,SAAClC,GACZ,OACI,6BACI,kBAAC,EAAD,MACA,0BAAMK,UAAU,WACXL,EAAMC,Y,eCyCRkC,G,6KA3CP,IAAIC,EAAY,KACZ,OAAQL,KAAK/B,MAAMqC,MACf,IAAM,eACFD,EAAa,yBAAK/B,UAAU,gBAChC,MACA,IAAM,YACF+B,EACI,yBAAK/B,UAAU,YACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,YAG3B,MACA,IAAM,OACF+B,EAAa,yBAAK/B,UAAU,SAChC,MACA,IAAM,SACF+B,EAAa,yBAAK/B,UAAU,WAChC,MACA,IAAM,QACF+B,EAAa,yBAAK/B,UAAU,UAChC,MACA,IAAM,QACF+B,EAAa,yBAAK/B,UAAU,UAChC,MACA,IAAM,WACF+B,EAAa,yBAAK/B,UAAU,aAChC,MAEA,QACI+B,EAAY,KAGxB,OAAOA,M,GAnCgBH,cCuBhBK,G,MAxBC,SAACtC,GACb,IAAIuC,EAAyBC,OAAOC,KAAKzC,EAAM0C,aAC1CC,KAAI,SAAAC,GACD,OAAO,YAAIC,MAAM7C,EAAM0C,YAAYE,KAASD,KAAI,SAACG,EAAGC,GAChD,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAQG,EAAOV,KAAMO,UAG1DK,QAAO,SAACC,EAAaC,GAClB,OAAOD,EAAYE,OAAOD,KAC5B,IAON,OANyC,IAAlCZ,EAAuBc,SACtBd,EAAyB,oCAEjCpC,QAAQC,IAAIJ,EAAM0C,aAId,yBAAKrC,UAAU,UACX,kBAAC,EAAD,CAAkBgC,KAAK,cACtBE,EACD,kBAAC,EAAD,CAAkBF,KAAK,oBCMpBiB,EA3BO,SAACtD,GACnBG,QAAQC,IAAIJ,GACZ,IAAIuD,EAAgB,sBAMpB,OAJIA,EADDvD,EAAM0C,YAAY1C,EAAMqC,OAAS,EAChB,iCAEA,sBAIhB,6BACI,yBAAKhC,UAAU,mBACX,4BAAQA,UAAU,kBAAkBL,EAAMwD,MAA1C,KACA,0BAAMnD,UAAU,qBACZ,4BAAQA,UAAWkD,EAAe1C,QAASb,EAAMyD,YAAjD,QACA,4BAAQpD,UAAU,iBAAiBQ,QAASb,EAAM0D,SAAlD,QACA,oCAAU1D,EAAM0C,YAAY1C,EAAMqC,WCavCsB,EA5BQ,SAAC3D,GACpBG,QAAQC,IAAIJ,GASZ,OACI,6BATa,CACb,CAACwD,MAAO,QAASnB,KAAM,SACvB,CAACmB,MAAO,WAAYnB,KAAM,YAC1B,CAACmB,MAAO,QAASnB,KAAM,SACvB,CAACmB,MAAO,SAAUnB,KAAM,UACxB,CAACmB,MAAO,OAAQnB,KAAM,SAMLM,KAAI,SAACiB,GACV,OAAO,kBAAC,EAAD,CACPZ,IAAKY,EAAKJ,MACVA,MAAOI,EAAKJ,MACZnB,KAAMuB,EAAKvB,KACXK,YAAa1C,EAAM0C,YACnBgB,QAAS,kBAAK1D,EAAM0D,QAAQE,EAAKvB,OACjCoB,WAAY,kBAAKzD,EAAMyD,WAAWG,EAAKvB,cC6D5CwB,E,4MA1EXC,mBAAoB,WAChB3D,QAAQC,IAAI,wB,uDAEP,IAGD2D,EAOAC,EAVA,OAgBJ,OAfA7D,QAAQC,IAAI2B,KAAK/B,MAAMiE,UAAWlC,KAAK/B,MAAMkE,YAKzCH,EADDhC,KAAK/B,MAAMmE,YACM,gBAEC,iCAIjBH,KADDjC,KAAK/B,MAAMkE,aAAcnC,KAAK/B,MAAMmE,aAMnC,6BACA,4BAAQ9D,UAAW0D,EAAiBlD,QAASkB,KAAK/B,MAAMiE,WAAxD,cACI,yBAAK5D,UAAU,UAAUY,MAAO,CAC5BC,UAAW8C,EAAkB,gBAAkB,qBAC/C7C,QAAS6C,EAAkB,IAAM,MAGrC,yBAAK3D,UAAU,cACa,IAAvB0B,KAAK/B,MAAMoE,QACZ,6BACI,6BAEQ,0CAEJ,uBAAGnD,MAAO,CAACoD,OAAO,UAAlB,sDACA,4BAEK7B,OAAOC,KAAKV,KAAK/B,MAAM0C,aAAaC,KAAI,SAACC,EAAOG,GAC7C,OAEA,yBAAKC,IAAKJ,EAAMG,GAAQ,EAAK/C,MAAM0C,YAAYE,GAAS,EAAI,iCAAQ,EAAK5C,MAAM0C,YAAYE,GAA/B,gBAAoDA,EAApD,MAAoE,UAQxI,iDAAuBb,KAAK/B,MAAMsE,OAAOC,QAAQ,KAGrD,yBAAKlE,UAAU,eACX,oDACA,6BACI,4BAAQQ,QAASkB,KAAK/B,MAAMwE,WAAYnE,UAAU,aAAlD,UACA,4BAAQQ,QAASkB,KAAK/B,MAAMyE,QAASpE,UAAU,eAA/C,gBAKZ,yBAAKqE,GAAG,mB,GAhEJC,iBCMTC,EARE,SAAC5E,GAEd,OADAG,QAAQC,IAAIJ,EAAM6E,MAEd7E,EAAM6E,KAAM,yBAAKxE,UAAU,WAAWQ,QAASb,EAAM8E,UAAkB,MCEzEC,EAAmB,CACrBC,MAAO,GACPC,OAAQ,GACRC,KAAM,IACNC,MAAM,GACNC,SAAU,IA4KCC,E,kDAzKX,WAAYrF,GAAO,IAAD,8BACd,cAAMA,IAeVsF,oBAAoB,SAACC,GAKlB,IAAIC,EAAMhD,OAAOC,KAAK8C,GACrB5C,KAAI,SAACC,GACD,OAAO2C,EAAK3C,MAEfK,QAAO,SAACC,EAAauC,GAClB,OAAOvC,EAAcuC,IACvB,GACF,EAAK9D,SAAS,CACVwC,YAAaqB,EAAM,KA7BT,EAiClBE,cAAgB,SAACrD,GACblC,QAAQC,IAAIiC,GACZ,IACMsD,EADgB,EAAK7D,MAAMY,YAAYL,GACR,EAC/BuD,EAAkB,eACjB,EAAK9D,MAAMY,aAElBkD,EAAmBvD,GAAQsD,EAE3B,IAAME,EAAiBd,EAAkB1C,GAEnCyD,EADW,EAAKhE,MAAMiE,WACAF,EAC5B,EAAKlE,SAAS,CACXe,YAAakD,EACbG,WAAaD,IAEhB,EAAKR,oBAAoBM,IAjDX,EAoDlBI,iBAAmB,SAAC3D,GAEhB,IAGIuD,EAAmBE,EADjBG,EAFgB,EAAKnE,MAAMY,YAAYL,GAEP,EAGtC,GAAG4D,GAAkB,EAAE,CACnBL,EAAkB,eACX,EAAK9D,MAAMY,aAElBvC,QAAQC,IAAI6F,GACZL,EAAmBvD,GAAQ4D,EAE3B,IAAMC,EAAkBnB,EAAkB1C,GAE1CyD,EADiB,EAAKhE,MAAMiE,WACNG,EAEtB,EAAKvE,SAAS,CACde,YAAakD,EACbG,WAAaD,IAEb,EAAKR,oBAAoBM,KA1Ef,EA8ElBO,gBAAiB,WAEbhG,QAAQC,IAAI,EAAK0B,OACG,EAAKA,MAAMqC,YAE5B,EAAKxC,SAAS,CACbsC,WAAW,IAGZ,EAAKtC,SAAS,CACTsC,WAAW,KAxFL,EA8FlBO,WAAa,WACT,EAAK7C,SAAS,CACVsC,WAAW,KAhGD,EAmGlBmC,qBAAqB,WAUA,EAAKtE,MAAMY,YACZ,EAAKZ,MAAMiE,WAuB5B,EAAKpE,SAAS,CACVsC,WAAU,EACVvB,YAAY,CACPsC,MAAO,EACPI,SAAU,EACVF,KAAM,EACNC,MAAO,EACPF,OAAQ,GAEbc,WAAW,EACX5B,aAAa,EACbC,SAAS,KA9IZ,EAAKtC,MAAM,CACPY,YAAY,CACRsC,MAAO,EACPI,SAAU,EACVD,MAAO,EACPF,OAAQ,EACRC,KAAM,GAEVa,WAAY,EACZ5B,aAAa,EACbF,WAAW,EACXG,SAAS,GAbC,E,qDAsJd,OACI,kBAAC,EAAD,KAEI,kBAAC,EAAD,CAAQ1B,YAAaX,KAAKD,MAAMY,cAChC,yBAAKrC,UAAU,aACX,uBAAGY,MAAO,CAACoF,UAAU,SAAUC,UAAU,SAAzC,iBAAgE,qCAAWvE,KAAKD,MAAMiE,WAAWxB,QAAQ,KAEzG,kBAAC,EAAD,CAAgB7B,YAAaX,KAAKD,MAAMY,YAAagB,QAAS3B,KAAK2D,cAAejC,WAAY1B,KAAKiE,iBAAkBO,kBAAmBxE,KAAKD,MAAM0E,kBAEnJ,kBAAC,EAAD,CAAU3B,KAAM9C,KAAKD,MAAMmC,UAAWa,QAAS/C,KAAKyC,aALxD,IAMI,kBAAC,EAAD,CAAU9B,YAAcX,KAAKD,MAAMY,YAAa4B,OAAQvC,KAAKD,MAAMiE,WAAY5B,YAAapC,KAAKD,MAAMqC,YAAcF,UAAWlC,KAAKoE,gBAAiB3B,WAAYzC,KAAKyC,WAAYN,WAAYnC,KAAKD,MAAMmC,UAAWQ,QAAS1C,KAAKqE,qBAAsBhC,QAASrC,KAAKD,MAAMsC,gB,GAjKrQnC,aCXtBwE,E,kDACJ,WAAYzG,GAAO,IAAD,8BAChB,cAAMA,IACD8B,MAAM,CACT4E,KAAK,WAHS,E,qDAOhB,OACE,6BAEE,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAZczE,aAoBtB0E,IAASC,OAAO,kBAAC,EAAD,MACdC,SAASC,eAAe,QACXL,c","file":"static/js/main.5e86e4de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const Aux = (props) => props.children; //we don't need to import React here\r\n                                    //since we are not using it. \r\n                                    //Aux here is a regular statement function\r\n                                    //.NOT A COMPONENT\r\n\r\nexport default Aux;","import React from \"react\";\r\nimport \"../../../../../Layout/Layout.css\";\r\n\r\nconst NavigationItems = (props)=>{\r\n    console.log(props);\r\n    return(\r\n        <li className=\"naviItem\"><a href={props.link} className={props.active ? \"active\" : null}>{props.children}</a></li>\r\n    )\r\n}\r\n\r\n\r\nexport default NavigationItems;","import React from \"react\";\r\nimport NavigationItem  from \"./NavigationItem/NavigationItem\";\r\nimport \"../../../../Layout/Layout.css\";\r\n\r\nconst NavigationItems = (props) =>{\r\n\r\n    return(\r\n        <ul className=\"naviItems\"> \r\n                 {/* passes in \"link\" and \"active\" as props to NavigationItem */}\r\n                 {/* active passes like this without equals to indicate it's a boolean true. */}\r\n             <NavigationItem link=\"/\"  active >Burger Builder</NavigationItem>\r\n             <NavigationItem link=\"/\" >Checkout </NavigationItem>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default NavigationItems;","import React from \"react\";\r\nimport '../../../Layout/Layout.css';\r\nimport NavigationItems  from \"./NavigationItems/NavigationItems\";\r\n\r\n\r\nconst Navigation = (props)=>{\r\n    return( \r\n        <nav className=\"desktopOnly\">\r\n            <NavigationItems />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nconst SideDrawerBackdrop =(props)=>{    \r\n    return props.handleSideBar ? <div className=\"backdrop\" onClick={props.closeSideDrawer}></div> :null\r\n}\r\n\r\n\r\nexport default SideDrawerBackdrop;","import React from \"react\";  //SideDrawer for small devices only\r\nimport burgerLogo from \"../../../../../assets/burger-logo.png\";\r\nimport \"../../../../Layout/Layout.css\"\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport SideDrawerBackdrop from \"../../../../Burger/OrderBtn/Backdrop/SideDrawerBackdrop\";\r\nconst SideDrawer = (props)=>{\r\n    //..\r\n    console.log(props.handleSideBar);\r\n    var handleMysideBar = props.handleSideBar;\r\n    return(\r\n        <section>\r\n            <SideDrawerBackdrop handleSideBar={props.handleSideBar} closeSideDrawer={props.closeSideDrawer}/> {/*  (nav transparent layout) */}\r\n            <div className=\"sideDrawer\"\r\n            style={{\r\n            transform: handleMysideBar ? \"translateX(0)\" : \"translateX(-100%)\",\r\n            opacity: handleMysideBar ?  \"1\" : \"0\",\r\n            display: handleMysideBar ? \"block\": \"none\",\r\n            transition: \"all 1s linear\"\r\n            }}>\r\n                \r\n                <img className=\"burgerPic\" src={burgerLogo} alt=\"Burger\" />\r\n            <nav>\r\n                <NavigationItems />\r\n            </nav>\r\n            \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SideDrawer;","import React from \"react\";\r\nimport \"../Layout.css\";\r\nimport Aux from \"../../hoc/Aux\";\r\nimport Navigation from \"./Navigation/Navigation\";\r\nimport burgerLogo from \"../../../assets/burger-logo.png\";\r\nimport SideDrawer from \"./Navigation/SideDrawer/SideDrawer\";\r\n\r\nclass Toolbar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            toolBarClicked: false\r\n        }\r\n    }\r\n    showToolbarOptions = ()=>{\r\n        this.setState({\r\n            toolBarClicked: true\r\n        })\r\n    }\r\n    closeToolbarOptions = ()=>{\r\n        this.setState({\r\n            toolBarClicked :false\r\n        });\r\n    }\r\n    render(){\r\n        console.log(this.state.toolBarClicked);\r\n       return(\r\n           <Aux>\r\n                <header className=\"toolbar\">\r\n                    <button className=\"toolbarOptionsBtn\" onClick={()=>this.showToolbarOptions()}>\r\n                        <div></div>\r\n                        <div></div> {/*button bars */}\r\n                        <div></div>\r\n                    </button>\r\n                    <div className=\"logoContainer\">\r\n                        <img className=\"burgerLogo\" src={burgerLogo} alt=\"Burger\"/>\r\n                    </div>\r\n                    <SideDrawer handleSideBar={this.state.toolBarClicked} closeSideDrawer={this.closeToolbarOptions}/>\r\n\r\n                    <Navigation />\r\n                    \r\n                </header>\r\n\r\n               \r\n            </Aux>\r\n        ) \r\n    }\r\n    \r\n}\r\n\r\nexport default Toolbar;","import React from \"react\";\r\nimport  \"../Layout/Layout.css\";\r\nimport Toolbar from \"./Toolbar/Toolbar\";\r\nconst Layout = (props)=>{\r\n    return(\r\n        <div>\r\n            <Toolbar />\r\n            <main className=\"Content\">\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n    )\r\n        \r\n    \r\n}\r\n\r\nexport default Layout;\r\n//this is a higher order component which is wrapped around \"BurgerBuilder\" component","import React, {Component} from \"react\";\r\nimport \"../BurgerIngredient/BurgerIngredientStyle.css\";\r\n// import PropsTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n        let ingredient= null; //null by default\r\n            switch (this.props.type){\r\n                case (\"bread-bottom\"):\r\n                    ingredient = <div className=\"BreadBottom\"></div>;\r\n                break;\r\n                case (\"bread-top\"):\r\n                    ingredient =(\r\n                        <div className=\"BreadTop\">\r\n                            <div className=\"Seeds1\"></div>\r\n                            <div className=\"Seeds2\"></div>\r\n                        </div>\r\n                    ); \r\n                break;\r\n                case (\"meat\"):\r\n                    ingredient = <div className=\"Meat\"></div>\r\n                break;\r\n                case (\"cheese\"):\r\n                    ingredient = <div className=\"Cheese\"></div>\r\n                break;\r\n                case (\"salad\"):\r\n                    ingredient = <div className=\"Salad\"></div>\r\n                break;\r\n                case (\"bacon\"):\r\n                    ingredient = <div className=\"Bacon\"></div>\r\n                break;\r\n                case (\"tomatoes\"):\r\n                    ingredient = <div className=\"Tomatoes\"></div>\r\n                break;\r\n\r\n                default: //emphasizes to keep ingredient null by default\r\n                    ingredient =null;\r\n                break;\r\n        }\r\n        return ingredient;\r\n  \r\n    };\r\n    \r\n}\r\n            //Install propTypes and uncomment this\r\n// BurgerIngredient.propTypes={\r\n//             type: PropTypes.string.isRequired\r\n// }\r\n       \r\nexport default BurgerIngredient;","import React from \"react\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nimport \"../Burger/Burger.css\";\r\nconst Burger  = (props)=>{          //accesses the object properties that we receive from \"bugerBuilder\" component\r\n    let transformedIngredients = Object.keys(props.ingredients) //maps through those properties\r\n        .map(igKey =>{                                  //maps through the values of those properties\r\n            return [...Array(props.ingredients[igKey])].map((_, index)=>{ //the components get repeated accordingly with the appropriate type\r\n                return <BurgerIngredient key={igKey + index} type={igKey} />\r\n            });\r\n        })\r\n        .reduce((accumulator, currentArr)=>{\r\n            return accumulator.concat(currentArr); //joins the old ingredient(s) with the new one and not causing them to be switched\r\n        },[])\r\n        if(transformedIngredients.length === 0){\r\n            transformedIngredients = \"Please start adding ingredients!\";\r\n        }\r\n    console.log(props.ingredients);\r\n\r\n    \r\n    return(\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n}\r\nexport default Burger;","import React from \"react\";\r\nimport \"../../../Layout/Layout.css\";\r\nconst BurgerControl = (props)=>{\r\n    console.log(props);\r\n    let handleLessBtn = \"ingredientBtns Less\";\r\n    if(props.ingredients[props.type] <= 0){\r\n        handleLessBtn = \"ingredientBtns disabledLessBtn\";\r\n    }else{\r\n        handleLessBtn = \"ingredientBtns Less\";\r\n    }\r\n    return(\r\n       \r\n        <div>\r\n            <div className=\"ingredientStyle\">\r\n                <strong className=\"ingredientName\">{props.label} </strong>\r\n                <span className=\"ingredientControl\">\r\n                    <button className={handleLessBtn} onClick={props.removeFunc}>Less</button>\r\n                    <button className=\"ingredientBtns\" onClick={props.addFunc}>More</button>\r\n                    <p>Piece:{props.ingredients[props.type]}</p>\r\n\r\n                    \r\n                 \r\n                </span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BurgerControl;","import React from \"react\";\r\nimport BurgerCtrl from \"./BurgerControl/BurgerControl\";\r\n\r\nconst BurgerControls = (props)=>{\r\n    console.log(props)\r\n    const controls = [\r\n        {label: \"Salad\", type: \"salad\" },\r\n        {label: \"Tomatoes\", type: \"tomatoes\"},\r\n        {label: \"Bacon\", type: \"bacon\" },\r\n        {label: \"Cheese\", type: \"cheese\" },\r\n        {label: \"Meat\", type: \"meat\" },\r\n       \r\n    ]\r\n    return(\r\n        <div>\r\n            {\r\n                controls.map((ctrl)=>{\r\n                    return <BurgerCtrl //burgerControl component\r\n                    key={ctrl.label}\r\n                    label={ctrl.label}\r\n                    type={ctrl.type}\r\n                    ingredients={props.ingredients}\r\n                    addFunc={()=> props.addFunc(ctrl.type)}\r\n                    removeFunc={()=> props.removeFunc(ctrl.type)} />\r\n                })\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BurgerControls;","import React, {PureComponent} from \"react\";\r\nimport \"../../Layout/Layout.css\";\r\n            //here we use PureComponent because this component might be\r\n            //re-rendered unnecessarily. For example,\r\n            //when the modal is hidden it updates the prices which is\r\n            //not necessary.\r\nclass  OrderBtn extends PureComponent{\r\n    // shouldComponentUpdate(nextProp, nextState){\r\n    //     return nextProp.modalState ? true : false;\r\n    // }\r\n    componentDidUpdate= ()=>{ //keeps track of component updates\r\n        console.log(\"Component Updated! \");\r\n    }\r\n    render(){\r\n        console.log(this.props.showModal, this.props.modalState);\r\n        \r\n        let handleOrderBtn;\r\n\r\n        if(this.props.purchasable){\r\n            handleOrderBtn =\"orderBtnStyle\"\r\n        }else{\r\n            handleOrderBtn = \"orderBtnStyle disabledOrderBtn\"\r\n        }\r\n        var shouldModalOpen;\r\n        if(this.props.modalState && this.props.purchasable){\r\n            shouldModalOpen = true;\r\n        }else{\r\n            shouldModalOpen = false;\r\n        }\r\n        return(\r\n            <div>\r\n            <button className={handleOrderBtn}  onClick={this.props.showModal}>Order Now!</button>\r\n                <div className=\"myModal\" style={{\r\n                    transform: shouldModalOpen ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                    opacity: shouldModalOpen ? \"1\" : \"0\",\r\n                    // display: shouldModalOpen ? \"block\" : \"none\"\r\n                }}>\r\n                <div className=\"modalBody\">\r\n                    {this.props.loading === false ?\r\n                    <div>\r\n                        <div>\r\n                        \r\n                                <h3>Your Order</h3>\r\n                            \r\n                            <p style={{margin:\"8px 0\"}}>A delicious burger with the following ingredients:</p>\r\n                            <ul> \r\n                                {/* //this code also works but I want to hard code it */}\r\n                                {Object.keys(this.props.ingredients).map((igKey, index)=>{\r\n                                    return (\r\n                                        // if   value           greater than 0,  then show this value and   it's property if not then show nohing.\r\n                                    <div key={igKey+index}>{this.props.ingredients[igKey] > 0 ? <li >  {this.props.ingredients[igKey]} piece(s) of {igKey}. </li> : null}</div>\r\n                                    )\r\n                                })\r\n                                }\r\n                                \r\n\r\n                            </ul>\r\n\r\n                            <strong>Total Price: ${this.props.TPrice.toFixed(2)}</strong>\r\n                            \r\n                        </div>\r\n                        <div className=\"modalFooter\">\r\n                            <p>Continue to checkout?</p>\r\n                            <div>\r\n                                <button onClick={this.props.closeModal} className=\"cancelBtn\" >Cancel</button>\r\n                                <button onClick={this.props.ordered} className=\"continueBtn\">Continue </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div id=\"loading\"></div>\r\n                    }\r\n                    </div>\r\n                </div>\r\n        </div>\r\n            \r\n        \r\n    )\r\n        \r\n    }\r\n    \r\n        \r\n}\r\n\r\nexport default OrderBtn;","import React from \"react\";\r\n\r\nimport '../../../Layout/Layout.css';\r\n\r\nconst Backdrop = (props)=>{ //(Modal's layout)\r\n    console.log(props.show)\r\n    return (\r\n        props.show? <div className=\"backdrop\" onClick={props.clicked}></div> : null\r\n    )\r\n    \r\n}\r\n\r\nexport default Backdrop;","import React , {Component} from \"react\";\r\n// import Aux from \"../hoc/Aux\";\r\nimport Layout from \"../Layout/Layout\";\r\nimport Burger from \"../Burger/Burger\";\r\nimport \"../Layout/Layout.css\";\r\nimport BurgerControls from  \"../Burger/BurgerControls/BurgerControls\";\r\nimport OrderBtn from \"../Burger/OrderBtn/OrderBtn\";\r\nimport Backdrop from \"../Burger/OrderBtn/Backdrop/Backdrop\";\r\n// import axios from \"axios\";\r\nconst INGREDIENT_PRICES ={\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.5,\r\n    bacon:0.7,\r\n    tomatoes: 0.5\r\n}\r\nclass BurgerBuilder extends Component{ //put app state here INGREDIENT-PRICES\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            ingredients:{\r\n                salad: 0,\r\n                tomatoes: 0,\r\n                bacon: 0,\r\n                cheese: 0,\r\n                meat: 0,\r\n            },\r\n            totalPrice: 1,\r\n            purchasable: false,\r\n            showModal: false,\r\n            loading: false\r\n        }\r\n    }                   //passes updated ingredients through the parameter\r\n    updatePurchaseState=(ingr)=>{ //make \"purchasable\" be true or false according to values in the ingredients state\r\n                                //if all values are 0 then purcharable will be false therefore the order button will be disabled and vise versa\r\n        // const ingr = {\r\n        //     ...this.state.ingredients\r\n        // };\r\n       var sum = Object.keys(ingr)\r\n       .map((igKey)=>{ //loop through properties\r\n            return ingr[igKey]\r\n        })\r\n        .reduce((accumulator, el)=>{ //we use reduce to get access to the old values \"accumulator\" and add them to the current values\r\n            return accumulator + el;\r\n        },0)\r\n        this.setState({\r\n            purchasable: sum > 0 //if sum is greater than 0, purchasable will turn to true and vise versa\r\n        });\r\n    }\r\n\r\n    addIngredient = (type)=>{\r\n        console.log(type);//updates count\r\n        const oldIngredient = this.state.ingredients[type];\r\n        const increaseCount = oldIngredient +1;\r\n        const updatedIngredients = {    \r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = increaseCount;\r\n                        //updates prices\r\n        const priceAddition  = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;  \r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({   //updates the overall ingredients\r\n           ingredients: updatedIngredients,\r\n           totalPrice : newPrice,\r\n        });\r\n        this.updatePurchaseState(updatedIngredients); //passing the updated state into the \"updatePurchaseState\" Method\r\n    }\r\n\r\n    removeIngredient = (type)=>{\r\n        \r\n        const oldIngredient = this.state.ingredients[type];\r\n        \r\n        const ingredientCount = oldIngredient-1;\r\n        var updatedIngredients,newPrice;\r\n\r\n        if(ingredientCount >-1){ //removes ingredients only if \"ingredientCount\" is more than -1\r\n            updatedIngredients = {     //updates count\r\n                ...this.state.ingredients\r\n            }\r\n            console.log(ingredientCount);\r\n            updatedIngredients[type] = ingredientCount;\r\n            \r\n            const priceDeduction  = INGREDIENT_PRICES[type];\r\n            const oldPrice = this.state.totalPrice;  //updates prices\r\n            newPrice = oldPrice - priceDeduction ;\r\n            \r\n            this.setState({   //updates the overall ingredients\r\n            ingredients: updatedIngredients,\r\n            totalPrice : newPrice,\r\n            }); \r\n            this.updatePurchaseState(updatedIngredients);\r\n        }\r\n        \r\n    }\r\n    purchaseHandler =()=>{  //allow\" showModal\" to be only true when\r\n                            //the \"purchasable\" state is also true\r\n        console.log(this.state);\r\n       var isItPurchasable =this.state.purchasable;\r\n       if(isItPurchasable){\r\n           this.setState({\r\n            showModal: true\r\n        });\r\n       }else{\r\n           this.setState({\r\n                showModal: false\r\n           });\r\n          \r\n       }\r\n        \r\n    }\r\n    closeModal = ()=>{\r\n        this.setState({\r\n            showModal: false\r\n        });\r\n    }\r\n    handleCompletedOrder=()=>{\r\n        const order ={\r\n            customer:{ \r\n                userName : \"Mahmoud Farargy\",\r\n                zipCode: \"33856\",\r\n                street: \"Test st. Cali\",\r\n                country: \"USA\",\r\n                email: \"test@gmail.com\",\r\n            },\r\n            deliveryMethod: \"fastest\",\r\n            ingredients: this.state.ingredients,\r\n            totalPrice: this.state.totalPrice // in production ready app, you must calculate the price\r\n             //on the server because the user might manipulate this code and change price before sending it\r\n                  \r\n        }\r\n        // axios.post(\"https://burger-builder-c5a0d.firebaseio.com/orders.json\", order)\r\n        //     .then(response=>{\r\n        //         alert(\"You ordered successfully!\");  //shows an alert indicating a successful process\r\n        //         console.log(response); //sends results to the server\r\n        //         this.setState({\r\n        //             showModal: false, //closes the modal\r\n        //             loading:false,\r\n        //             purchasable: false\r\n        //         })\r\n               \r\n        //     }).catch(error=>{\r\n        //                this.setState({\r\n        //                     showModal: false,\r\n        //                     purchasable: false,\r\n        //                     loading: false\r\n        //                 })\r\n        //         console.log(error);\r\n        //     })\r\n       \r\n       this.setState({\r\n           showModal:false,  //should be removed from here\r\n           ingredients:{\r\n                salad: 0,\r\n                tomatoes: 0,\r\n                meat: 0,    //resets all ingredients to zero\r\n                bacon: 0,\r\n                cheese: 0\r\n           },\r\n           totalPrice:1,         //resets totalprice to one\r\n           purchasable: false,\r\n           loading: true,\r\n        \r\n       })\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <Layout>\r\n                \r\n                <Burger ingredients={this.state.ingredients}/>\r\n                <div className=\"Container\">\r\n                    <p style={{textAlign:\"center\", marginTop:\"15px\"}}>Current Price:<strong> ${this.state.totalPrice.toFixed(2)}</strong></p>\r\n\r\n                    <BurgerControls ingredients={this.state.ingredients} addFunc={this.addIngredient} removeFunc={this.removeIngredient} isLessBtnDisabled={this.state.disableLessBtns}/>\r\n                    \r\n                    <Backdrop show={this.state.showModal} clicked={this.closeModal}/> {/* Modal's layout*/}\r\n                    <OrderBtn ingredients= {this.state.ingredients} TPrice={this.state.totalPrice} purchasable={this.state.purchasable}  showModal={this.purchaseHandler} closeModal={this.closeModal} modalState={this.state.showModal} ordered={this.handleCompletedOrder} loading={this.state.loading}/>\r\n                    \r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n        \r\n}\r\n\r\nexport default BurgerBuilder;","import React, {Component} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport Layout from \"./Components/Layout/Layout\";\r\n// import BurgerIngredient from \"./Components/Burger/BurgerIngredient/BurgerIngredient\";\r\nimport BurgerBuilder from \"./Components/Burger Builder/BurgerBuilder\";\r\nclass MainApp extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      test:\"working\"\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <div>\r\n        {/* <h1></h1> */}\r\n        <Layout />\r\n        <BurgerBuilder />\r\n          \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nReactDOM.render(<MainApp/>,\r\n  document.getElementById(\"App\")); \r\nexport default MainApp;"],"sourceRoot":""}